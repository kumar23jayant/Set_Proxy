/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Set_Proxy;

import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.List;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Jayant Kumar Yadav
 */
public class proxy_gui extends javax.swing.JFrame {

    /**
     * Creates new form proxy_gui
     */
    
    static ArrayList<String> proxyList;
    Proxy back;
    static Thread newback, constatus, proxyServer;
    String path, file;
    static File locdir, locfile;
    static connection con;
    static ProxyServer pro;
    
    
    public proxy_gui() throws IOException {
        initComponents();
        
        //set window to center of screen
        this.setLocationRelativeTo(null);
        
        con = new connection(this);
        constatus = new Thread(con);
        
        pro = new ProxyServer(this);
        proxyServer = new Thread(pro);
        
        
        path = System.getenv("APPDATA")+File.separator+"Set_Proxy";
        locdir = new File(path);
        if(locdir.exists()){
            System.out.println("already exists yeah.\n");
        }
        else{
            locdir.mkdirs();
        }
        
        file = path+File.separator+"state.tmp";
        
        locfile = new File(file);
        
        if(locfile.exists()){
            System.out.println("file is already existing.");
        }
        else{
            try{
            locfile.createNewFile();
            }
            catch(IOException e){
                System.out.println(e.getMessage());
            }
        }
        
        System.out.println(path);
        
        setIcon();
        
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("resources/set_proxy.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        start = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        curProxy = new javax.swing.JLabel();
        proxyPannel = new javax.swing.JPanel();
        proxies = new javax.swing.JLabel();
        sauchauda = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        sauchaubis = new javax.swing.JCheckBox();
        sauuntis = new javax.swing.JCheckBox();
        dochauda = new javax.swing.JCheckBox();
        dountis = new javax.swing.JCheckBox();
        teenuntis = new javax.swing.JCheckBox();
        sautees = new javax.swing.JCheckBox();
        status = new javax.swing.JLabel();
        startUp = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        credits = new javax.swing.JLabel();
        createdBy = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Set_Proxy");
        setBackground(new java.awt.Color(84, 129, 232));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        start.setText("Start");
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startMouseClicked(evt);
            }
        });

        pause.setText("Pause");
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseMouseClicked(evt);
            }
        });

        title.setBackground(new java.awt.Color(64, 189, 86));
        title.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Set_Proxy");
        title.setToolTipText("");

        curProxy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        curProxy.setText("Current Proxy : 172.31.100.14");

        proxies.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proxies.setText("Choose Proxies : ");

        sauchauda.setText("172.31.100.14");
        sauchauda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sauchaudaMouseClicked(evt);
            }
        });
        sauchauda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauchaudaActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*");

        sauchaubis.setText("172.31.100.26");
        sauchaubis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sauchaubisMouseClicked(evt);
            }
        });

        sauuntis.setText("172.31.100.29");
        sauuntis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sauuntisMouseClicked(evt);
            }
        });

        dochauda.setText("172.31.102.14");
        dochauda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dochaudaMouseClicked(evt);
            }
        });

        dountis.setText("172.31.102.29");
        dountis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dountisMouseClicked(evt);
            }
        });

        teenuntis.setText("172.31.103.29");
        teenuntis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teenuntisMouseClicked(evt);
            }
        });

        sautees.setText("172.31.100.30");
        sautees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sauteesMouseClicked(evt);
            }
        });
        sautees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauteesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout proxyPannelLayout = new javax.swing.GroupLayout(proxyPannel);
        proxyPannel.setLayout(proxyPannelLayout);
        proxyPannelLayout.setHorizontalGroup(
            proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proxyPannelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sautees)
                    .addComponent(sauuntis)
                    .addGroup(proxyPannelLayout.createSequentialGroup()
                        .addComponent(sauchauda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addComponent(sauchaubis))
                .addGap(43, 43, 43)
                .addGroup(proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dountis)
                    .addComponent(dochauda)
                    .addComponent(teenuntis))
                .addContainerGap(75, Short.MAX_VALUE))
            .addComponent(proxies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        proxyPannelLayout.setVerticalGroup(
            proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proxyPannelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(proxies, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sauchauda)
                    .addComponent(jLabel2)
                    .addComponent(dochauda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sauuntis)
                    .addComponent(dountis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(proxyPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teenuntis)
                    .addComponent(sauchaubis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sautees)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        status.setText("Connection Status : conntected");

        startUp.setText("Set Application On Startup");
        startUp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        credits.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        credits.setText("<html> Credits : <a href=\\\"\\\">172.31.9.69/dc/proxy</a></html>");
        credits.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        credits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creditsMouseClicked(evt);
            }
        });

        createdBy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createdBy.setText("<html> For more info : <a href=\\\"\\\">go to github</a></html>");
        createdBy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createdBy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createdByMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(credits)
            .addComponent(createdBy)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(credits, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createdBy, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(curProxy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(startUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(proxyPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(status)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proxyPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startUp)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(curProxy, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sauchaudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauchaudaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sauchaudaActionPerformed

    private void sauteesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauteesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sauteesActionPerformed
    
    
    private void sauchaudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sauchaudaMouseClicked
        
        //message when clicked on sauchauda
        String infoMessage = "Dekh ke! bahut bhaukali h ye proxy.";
        
        if(sauchauda.isSelected()){
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);
            
            //set sauchauda in proxyList
            proxyList.add(sauchauda.getText());
        }
        else{
            proxyList.remove(sauchauda.getText());
        }
    }//GEN-LAST:event_sauchaudaMouseClicked

    private void creditsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creditsMouseClicked
        
        //address of web for credits
        String urldc = "http://172.31.9.69/dc/proxy.php";
        
        try {
                //System.out.println("opening proxy.php");
                
                //opening address in url on click
                Desktop.getDesktop().browse(new URI(urldc));
                
        } catch (URISyntaxException | IOException ex ) {
                            //It looks like there's a problem
                            //System.out.println("found some error in proxy.php");
        }
        
        
    }//GEN-LAST:event_creditsMouseClicked

    private void sauuntisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sauuntisMouseClicked
        // TODO add your handling code here:
        if(sauuntis.isSelected()){
            proxyList.add(sauuntis.getText());
        }
        else{
            proxyList.remove(sauuntis.getText());
        }
    }//GEN-LAST:event_sauuntisMouseClicked

    private void sauchaubisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sauchaubisMouseClicked
        // TODO add your handling code here:
        if(sauchaubis.isSelected()){
            proxyList.add(sauchaubis.getText());
        }
        else{
            proxyList.remove(sauchaubis.getText());
        }
    }//GEN-LAST:event_sauchaubisMouseClicked

    private void sauteesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sauteesMouseClicked
        // TODO add your handling code here:
        if(sautees.isSelected()){
            proxyList.add(sautees.getText());
        }
        else{
            proxyList.remove(sautees.getText());
        }
    }//GEN-LAST:event_sauteesMouseClicked

    private void dochaudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dochaudaMouseClicked
        // TODO add your handling code here:
        if(dochauda.isSelected()){
            proxyList.add(dochauda.getText());
        }
        else{
            proxyList.remove(dochauda.getText());
        }
    }//GEN-LAST:event_dochaudaMouseClicked

    private void dountisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dountisMouseClicked
        // TODO add your handling code here:
        if(dountis.isSelected()){
            proxyList.add(dountis.getText());
        }
        else{
            proxyList.remove(dountis.getText());
        }
    }//GEN-LAST:event_dountisMouseClicked

    private void teenuntisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teenuntisMouseClicked
        // TODO add your handling code here:
        if(teenuntis.isSelected()){
            proxyList.add(teenuntis.getText());
        }
        else{
            proxyList.remove(teenuntis.getText());
        }
    }//GEN-LAST:event_teenuntisMouseClicked

    private void startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseClicked
       
            // TODO add your handling code here:
            for(String ele : proxyList){
                System.out.println("proxies in list"+ele);
            }
            
            if(!proxyList.isEmpty()){
                back = new Proxy(proxyList, this);
                newback = new Thread(back);
                newback.start();
                
                start.setEnabled(false);
                
                if(locfile.exists()){
                    
                    BufferedWriter writer = null;
                    
                    
                    try {
                        writer = new BufferedWriter(new FileWriter(locfile));
                        
                        Component[] components = proxyPannel.getComponents();
                        for (Component component : components) {
                            
                            if(component instanceof javax.swing.JCheckBox && ((javax.swing.JCheckBox)component).isSelected()){
                                writer.write(((javax.swing.JCheckBox)component).getText()+"$");
                                //System.out.println("written"+((javax.swing.JCheckBox)component).getText()); 
                            }
                            component.setEnabled(false);
                        }
                        
                        writer.close();
                         
                    } catch (IOException ex) {
                        Logger.getLogger(proxy_gui.class.getName()).log(Level.SEVERE, null, ex);
                    }
            
                    pause.setEnabled(true);
                }
                else{
                    String infoMessage = "Select atleast one proxy to get started.";
                    JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }   
    }//GEN-LAST:event_startMouseClicked

    private void pauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseClicked
        // TODO add your handling code here:
        start.setEnabled(true);
        
        if(newback!=null){
            newback.interrupt();
        }
        
        Component[] components = proxyPannel.getComponents();
            for (Component component : components) {
                    component.setEnabled(true);
            }
        
        pause.setEnabled(false);
    }//GEN-LAST:event_pauseMouseClicked

    private void createdByMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createdByMouseClicked
        //address of web for info
        String url = "https://github.com/jack23jay/proxy-moti-ki";
        
        try {
                //opening address in url on click
                Desktop.getDesktop().browse(new URI(url));
                
        } catch (URISyntaxException | IOException ex) {
                            //It looks like there's a problem
        }
        
    }//GEN-LAST:event_createdByMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        //setIcon();
    }//GEN-LAST:event_formFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(proxy_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(proxy_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(proxy_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(proxy_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                try {
                    new proxy_gui().setVisible(true);
                    
                    constatus.start();
                    
                    proxyServer.start();
                    
                    Thread t = new Thread(new Runnable() {
                        public void run()
                        {
                            // Insert some method call here.
                            Color col[]={Color.red, Color.BLUE, Color.ORANGE, Color.green};
                            while(true){
                            for(Color ele : col){
                                try {
                                    title.setForeground(ele);
                                    Thread.sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(proxy_gui.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            }
                        }
                    });
                    t.start();
                    
                } catch (IOException ex) {
                    Logger.getLogger(proxy_gui.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                //diasble startup radio button
                startUp.setEnabled(false);
                proxyList = new ArrayList<>();
                
                
                BufferedReader reader = null;
                    
                    
                    try {
                        reader = new BufferedReader(new FileReader(locfile));
                        String line = null;
                        String proxyset = "";
                        while((line = reader.readLine())!=null){
                            proxyset += line;
                            System.out.println(proxyset);
                        }
                        
                        reader.close();
                        
                        Component[] components = proxyPannel.getComponents();
                        
                        for (Component component : components) {
                            
                            if(component instanceof javax.swing.JCheckBox && proxyset.contains(((javax.swing.JCheckBox)component).getText())){
                                
                                ((javax.swing.JCheckBox)component).setSelected(true);
                                proxyList.add(((javax.swing.JCheckBox)component).getText());
                                //System.out.println("written"+((javax.swing.JCheckBox)component).getText()); 
                            }
                            
                        }
                        
                         
                    } catch (IOException ex) {
                        Logger.getLogger(proxy_gui.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
            }
        });
    }
    
    
    public void getConStatus(boolean con){
        if(con){
            status.setText("Connection Status : Connected");
            System.out.println("connected");
        }
        else{
            status.setText("Connection Status : Disconnected");
            System.out.println("disconncetd");
        }
    }
    
    
    
    
    public void getCurProxy(String prox){
        if(prox!=null){
            if(!curProxy.getText().contains(prox))
                curProxy.setText("Current Proxy : "+prox);
            System.out.println("sent "+prox);
        }
        else
            curProxy.setText("Current Proxy : No Proxy");
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel createdBy;
    private javax.swing.JLabel credits;
    public static javax.swing.JLabel curProxy;
    private javax.swing.JCheckBox dochauda;
    private javax.swing.JCheckBox dountis;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton pause;
    private javax.swing.JLabel proxies;
    private static javax.swing.JPanel proxyPannel;
    private javax.swing.JCheckBox sauchaubis;
    private javax.swing.JCheckBox sauchauda;
    private javax.swing.JCheckBox sautees;
    private javax.swing.JCheckBox sauuntis;
    private javax.swing.JButton start;
    private static javax.swing.JRadioButton startUp;
    public static javax.swing.JLabel status;
    private javax.swing.JCheckBox teenuntis;
    private static javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("set_proxy.png")));
    }
}
